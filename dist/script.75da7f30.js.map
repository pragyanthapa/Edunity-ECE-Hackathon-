{"version":3,"sources":["node_modules/three/build/three.module.js","script.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this8","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this9","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this10","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_this11","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this12","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this13","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this14","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this15","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this16","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this17","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this18","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this19","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this20","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this21","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_this22","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","backgroundRotation","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","_m1$1","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_this23","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","isInstancedBufferGeometry","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_this24","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_this25","isMeshDepthMaterial","_Material4","_this26","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","shadowCamera","k","kl","depthMaterial","shadowMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT16","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","ArrayCamera","_PerspectiveCamera","_this27","isArrayCamera","Group","_Object3D4","_this28","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","cameraXR","depthColor","depthWidth","depthHeight","WebXRManager","_EventDispatcher6","_this29","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","_m1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexArray","indexString","cachedObject","chunkSize","chunkOffsetUniform","boundary","chunkOffset","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","renderBackground","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","isLOD","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","environmentIntensity","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","_Object3D5","_this30","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_this31","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_this32","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_this33","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this34","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","Bone","_Object3D8","_this35","isBone","DataTexture","_Texture5","_this36","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this37","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_this38","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix$1","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_this39","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","getInstanceCountAt","setInstanceCountAt","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","culled","_Material6","_this40","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D9","_this41","computeLineDistances","lineDistances","localThreshold","localThresholdSq","checkIntersection","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this42","LineLoop","_Line2","_this43","_Material7","_this44","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_this45","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","video","_this46","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_this47","CompressedTexture","_Texture8","_this48","CompressedArrayTexture","_CompressedTexture","_this49","CompressedCubeTexture","_CompressedTexture2","_this50","isCompressedCubeTexture","CanvasTexture","_Texture9","_this51","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this52","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this53","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this54","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this55","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this56","isCubicBezierCurve3","LineCurve","_Curve5","_this57","isLineCurve","LineCurve3","_Curve6","_this58","isLineCurve3","QuadraticBezierCurve","_Curve7","_this59","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this60","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this61","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this62","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_this63","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_this64","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this65","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_this66","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_this67","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this68","PolyhedronGeometry","_BufferGeometry6","_this69","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this70","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_this71","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_this72","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_this73","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this74","OctahedronGeometry","_PolyhedronGeometry3","_this75","RingGeometry","_BufferGeometry9","_this76","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this77","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this78","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this79","TorusGeometry","_BufferGeometry12","_this80","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this81","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this82","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this83","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_this84","RawShaderMaterial","_ShaderMaterial","_this85","_Material9","_this86","_MeshStandardMaterial","_this87","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","_Material10","_this88","_Material11","_this89","_Material12","_this90","_Material13","_this91","_Material14","_this92","_LineBasicMaterial","_this93","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this94","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this95","_wrapNativeSuper","FileLoader","_Loader","_this96","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this97","HemisphereLight","_Light","_this98","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_this99","isSpotLightShadow","SpotLight","_Light2","_this100","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this101","_cubeDirections","_cubeUps","PointLight","_Light3","_this102","DirectionalLightShadow","_LightShadow3","_this103","isDirectionalLightShadow","DirectionalLight","_Light4","_this104","AmbientLight","_Light5","_this105","RectAreaLight","_Light6","_this106","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this107","MaterialLoader","_Loader8","_this108","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_this109","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_callee2","_callee2$","_context9","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context10","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context12","_deserializeImage3","_callee4","_url","_callee4$","_context11","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this110","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this111","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this112","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this113","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_this114","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_this115","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this116","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this117","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this118","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this119","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this120","GridHelper","_LineSegments2","_this121","PolarGridHelper","_LineSegments3","_this122","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this123","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this124","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this125","Box3Helper","_LineSegments6","_this126","PlaneHelper","_Line3","_this127","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this128","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this129","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this130","isWebGLMultipleRenderTargets","revision","__THREE__","THREE","_interopRequireWildcard","require","_background","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","getOwnPropertyDescriptor","querySelector","innerWidth","innerHeight","WebGL1Renderer","appendChild","bg1","clock","animate","anim1","bundleURL","getBundleURLCached","getBundleURL","stack","getBaseURL","bundle","updateLink","link","newLink","cloneNode","onload","href","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '164';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[MORPHTARGETS_COUNT];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t#endif\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\t#endif\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 20 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\trender( renderer, cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t\trenderer.render( this.mesh, cameraXR );\n\n\t\t}\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdepthSensing.render( renderer, cameraXR );\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\tconst renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetInstanceCountAt( id ) {\n\n\t\tif ( this._multiDrawInstances === null ) return null;\n\n\t\treturn this._multiDrawInstances[ id ];\n\n\t}\n\n\tsetInstanceCountAt( id, instanceCount ) {\n\n\t\tif ( this._multiDrawInstances === null ) {\n\n\t\t\tthis._multiDrawInstances = new Int32Array( this._maxGeometryCount ).fill( 1 );\n\n\t\t}\n\n\t\tthis._multiDrawInstances[ id ] = instanceCount;\n\n\t\treturn id;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, createCanvasElement };\n","import * as THREE from 'three';\nimport './style.css';\nimport bg1 from './images/background.jpg';\n\n\n\n\n\n\n\nconst container = document.querySelector('.three_bg');\nconst loader = new THREE.TextureLoader();\n\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,0.1,1000);\n\nconst renderer = new THREE.WebGL1Renderer();\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncontainer.appendChild(renderer.domElement);\n\nconst geometry = new THREE.PlaneGeometry(14,8,15,9);\nconst material = new THREE.MeshBasicMaterial({\n   // color: 0xff0000,\n    map: loader.load(bg1),\n});\nconst mesh = new THREE.Mesh(geometry,material);\nscene.add(mesh);\ncamera.position.z = 5;\nconst count = geometry.attributes.position.count;\nconst clock = new THREE.Clock()\n\nfunction animate(){\n    const time = clock.getElapsedTime();\n    for(let i=0; i < count ; i++);{\n        const x = geometry.attributes.position.getX(i);\n        const y = geometry.attributes.position.getY(i);\n\n        const anim1 = 0.25 * Math.sin(x + time * 0.7);\n        geometry.attributes.position.setZ(i,anim1);\n        geometry.computeVertexNormals();\n        geometry.attributes.position.needsUpdate = true;\n\n\n    }\n    requestAnimationFrame(animate);\n    renderer.render(scene,camera)\n}\nanimate();\n\n\n\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}